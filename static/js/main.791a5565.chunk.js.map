{"version":3,"sources":["App.js","placeholder.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","className","id","value","spellCheck","onChange","event","target","children","remarkPlugins","remarkGfm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAqCeA,MA9Bf,WACE,MAA0BC,mBCRX,umCDQf,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,0BACEC,GAAG,SACHC,MAAOJ,EACPK,WAAW,QACXC,SAXS,SAACC,GAChBN,EAASM,EAAMC,OAAOJ,YAcpB,qBAAKF,UAAU,gCAAf,SACI,cAAC,IAAD,CACEC,GAAG,UACHD,UAAU,WACVO,SAAUT,EACVU,cAAe,CAACC,aElBbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.791a5565.chunk.js","sourcesContent":["import './App.scss';\nimport './markdown.scss'\nimport placeholder from './placeholder';\nimport { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\n\nfunction App() {\n  const [input, setInput] = useState(placeholder)\n\n  const onChange = (event) => {\n    setInput(event.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='both-wrappers editor-wrapper'>\n        <textarea\n          id='editor'\n          value={input}\n          spellCheck='false'\n          onChange={onChange}\n        />\n      </div>\n\n      <div className='both-wrappers preview-wrapper'>\n          <ReactMarkdown\n            id='preview'\n            className='markdown'\n            children={input}\n            remarkPlugins={[remarkGfm]}\n          ></ReactMarkdown>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const placeholder = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\` , between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n3. Last but not least, embedded images:\r\n\r\n![Heart Image](https://hotemoji.com/images/emoji/z/az9f8v28dksz.png)`\r\n\r\nexport default placeholder","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-hot-loader/patch';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}